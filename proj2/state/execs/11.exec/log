main() {
  Execution directory: /home/vikram/NLP-/proj2/state/execs/11.exec
  DataManager.loadExamples {
    Reading general {
      Path: evaluator/domains/dbquery/geoquery/1/geoquery.dlog {
        Parsing evaluator/domains/dbquery/geoquery/1/geoquery.dlog
        89 statements
        Parsing evaluator/domains/dbquery/geoquery/1/../../general/predicates.dlog
        49 statements
        Parsing evaluator/domains/dbquery/geoquery/1/geobase.dlog
        698 statements
      } [1.8s, cum. 1.8s]
      Path: evaluator/domains/dbquery/geoquery/1/lexicon.dlog {
        Parsing evaluator/domains/dbquery/geoquery/1/lexicon.dlog
        5 statements
        Parsing evaluator/domains/dbquery/geoquery/1/../../general/lexicon.dlog
        31 statements
        Parsing evaluator/domains/dbquery/geoquery/1/lexicon0.dlog
        5 statements
      }
      Path: /tmp/tmpgkg2zqtg.dlog {
        Parsing /tmp/tmpgkg2zqtg.dlog {
          DatalogParser.loadSafe(): start
          _parse([query], answer(A,(major(A),city(A),loc(A,B),state(B),river(C),loc(C,D),const(D,stateid(virginia)),traverse(C,B)))).
          _parse([query], answer(A,(capital(A),loc(A,B),state(B),next_to(B,C),state(C),next_to(C,D),const(D,stateid(texas))))).
          _parse([query], answer(A,(river(A),traverse(A,B),largest(C,(state(B),loc(C,B),city(C),loc(C,D),const(D,countryid(usa))))))).
          _parse([query], answer(A,largest(A,(state(A),const(B,riverid("rio grande")),traverse(B,A))))).
          _parse([query], answer(A,(state(A),place(B),loc(B,A),higher(B,C),highest(C,(place(C),loc(C,D),const(D,stateid(texas))))))).
          _parse([query], answer(A,lowest(B,(state(A),traverse(C,A),const(C,riverid(mississippi)),loc(B,A),place(B))))).
          _parse([query], answer(A,(state(A),next_to(B,A),largest(C,(state(B),population(B,C)))))).
          _parse([query], answer(A,(state(A),next_to(A,B),state(B),next_to(B,C),largest(D,(state(C),population(C,D)))))).
          _parse([query], answer(A,(state(A),loc(B,A),highest(B,(place(B),loc(B,C),const(C,countryid(usa))))))).
          _parse([query], answer(A,(population(B,A),largest(C,(state(B),area(B,C)))))).
          _parse([query], answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,countryid(usa))))))).
          _parse([query], answer(A,count(B,(river(B),loc(B,C),state(C),loc(D,C),highest(D,place(D))),A))).
          _parse([query], answer(A,(population(B,A),capital(B),loc(B,C),smallest(C,state(C))))).
          _parse([query], answer(A,smallest(A,(state(A),longest(B,river(B)),traverse(B,A))))).
          _parse([query], answer(A,(state(A),loc(B,A),place(B),higher(B,C),highest(C,(place(C),loc(C,D),const(D,stateid(colorado))))))).
          _parse([query], answer(A,(population(B,A),smallest(B,(state(B),next_to(B,C),const(C,stateid(wyoming))))))).
          _parse([query], answer(A,longest(A,(river(A),traverse(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,(density(B,A),const(B,stateid(pennsylvania))))).
          _parse([query], answer(A,(state(A),next_to(A,B),state(B),next_to(B,C),state(C),next_to(C,D),const(D,stateid(florida))))).
          _parse([query], answer(A,(capital(A),loc(A,B),state(B),next_to(B,C),const(C,stateid(texas))))).
          _parse([query], answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),state(C)))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,stateid(illinois))))).
          _parse([query], answer(A,highest(B,(state(A),loc(B,A),mountain(B))))).
          _parse([query], answer(A,sum(B,state(B),population(B),A))).
          _parse([query], answer(A,(river(A),loc(A,B),state(B),const(B,stateid(indiana))))).
          _parse([query], answer(A,(state(A),most(A,B,(state(A),loc(B,A),river(B)))))).
          _parse([query], answer(A,largest(B,(city(A),loc(A,C),const(C,stateid(minnesota)),population(A,B))))).
          _parse([query], answer(A,(state(A),next_to(A,B),most(B,C,(state(B),loc(C,B),city(C)))))).
          _parse([query], answer(A,(state(A),const(B,riverid(potomac)),traverse(B,A)))).
          _parse([query], answer(A,longest(A,(river(A),traverse(A,B),const(B,stateid("new york")))))).
          _parse([query], answer(A,count(B,(major(B),city(B),loc(B,C),state(C),next_to(C,D),const(D,stateid(nebraska))),A))).
          _parse([query], answer(A,largest(B,(state(A),density(A,B))))).
          _parse([query], answer(A,(state(A),loc(B,A),largest(C,(city(B),population(B,C)))))).
          _parse([query], answer(A,count(B,(state(B),const(C,riverid(colorado)),river(C),traverse(C,B)),A))).
          _parse([query], answer(A,smallest(A,(city(A),loc(A,B),largest(B,state(B)))))).
          _parse([query], answer(A,smallest(B,(state(A),area(A,B),next_to(A,C),const(C,stateid(texas)))))).
          _parse([query], answer(A,(high_point(B,A),loc(A,B),state(B),next_to(B,C),const(C,stateid(mississippi))))).
          _parse([query], answer(A,longest(A,(river(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),smallest(B,state(B)))))).
          _parse([query], answer(A,(state(A),next_to(A,B),smallest(C,(state(B),population(B,C)))))).
          _parse([query], answer(A,count(B,(state(B),next_to(B,C),major(C),river(C)),A))).
          _parse([query], answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,stateid(montana))))))).
          _parse([query], answer(A,lowest(A,(place(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,largest(B,(population(A,B),city(A),loc(A,C),const(C,stateid(wyoming)))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(springfield,sd))))).
          _parse([query], answer(A,(state(A),const(B,riverid(mississippi)),river(B),traverse(B,A)))).
          _parse([query], answer(A,(population(B,A),largest(B,state(B))))).
          _parse([query], answer(A,count(B,(state(B),loc(C,B),const(C,cityid(rochester,_))),A))).
          _parse([query], answer(A,(area(B,A),const(B,countryid(usa))))).
          _parse([query], answer(A,smallest(B,(city(A),population(A,B))))).
          _parse([query], answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,stateid(louisiana))))))).
          _parse([query], answer(A,(lake(A),loc(A,B),state(B),next_to(B,C),const(C,stateid(texas))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,longest(A,(river(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,count(B,(river(B),loc(B,C),const(C,countryid(usa))),A))).
          _parse([query], answer(A,largest(B,(state(A),density(A,B))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(atlanta,_))))).
          _parse([query], answer(A,highest(A,(mountain(A),loc(A,B),const(B,stateid(alaska)))))).
          _parse([query], answer(A,largest(B,(state(A),density(A,B))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,stateid(oklahoma))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(iowa))))).
          _parse([query], answer(A,count(B,(city(B),loc(B,C),const(C,countryid(usa))),A))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,stateid(missouri))))).
          _parse([query], answer(A,(area(B,A),const(B,stateid("south carolina"))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid("rhode island"))))).
          _parse([query], answer(A,count(B,(river(B),loc(B,C),const(C,stateid("new york"))),A))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,stateid(ohio))))).
          _parse([query], answer(A,(state(A),loc(B,A),river(B),traverse(B,A)))).
          _parse([query], answer(A,shortest(A,(river(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(montana)))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,smallest(B,(state(A),density(A,B))))).
          _parse([query], answer(A,count(B,(city(B),loc(B,C),const(C,countryid(usa))),A))).
          _parse([query], answer(A,largest(A,(state(A),next_to(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,(next_to(A,B),state(A),const(B,stateid(michigan))))).
          _parse([query], answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(california)))))).
          _parse([query], answer(A,(state(A),const(B,riverid(mississippi)),traverse(B,A)))).
          _parse([query], answer(A,most(A,B,(river(A),traverse(A,B),state(B))))).
          _parse([query], answer(A,(state(A),const(B,cityid("des moines",_)),loc(B,A)))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(sacramento,_))))).
          _parse([query], answer(A,smallest(B,(state(A),population(A,B))))).
          _parse([query], answer(A,count(B,(river(B),loc(B,C),const(C,stateid(missouri))),A))).
          _parse([query], answer(A,(loc(B,A),state(A),const(B,placeid("mount mckinley"))))).
          _parse([query], answer(A,largest(B,(state(A),loc(B,A),city(B))))).
          _parse([query], answer(A,count(B,(river(B),loc(B,C),const(C,stateid(colorado))),A))).
          _parse([query], answer(A,(major(A),river(A),loc(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,(city(A),loc(A,B),const(B,stateid(virginia))))).
          _parse([query], answer(A,count(B,(major(B),city(B)),A))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(montana))))).
          _parse([query], answer(A,(state(A),loc(B,A),const(B,riverid(red)),river(B)))).
          _parse([query], answer(A,(river(A),loc(A,B),const(B,stateid("new mexico"))))).
          _parse([query], answer(A,(city(A),loc(A,B),const(B,stateid(california))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(hawaii))))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid(hawaii))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(california))))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid(utah))))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid(georgia))))).
          _parse([query], answer(A,(state(A),\+(next_to(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(utah))))).
          _parse([query], answer(A,(area(B,A),const(B,cityid(seattle,_))))).
          _parse([query], answer(A,fewest(A,B,(state(A),next_to(A,B),state(B))))).
          _parse([query], answer(A,(len(B,A),const(B,riverid("rio grande"))))).
          _parse([query], answer(A,(state(A),capital(A,B),const(B,cityid(dover,_))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid("new york"))))).
          _parse([query], answer(A,longest(A,river(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(hawaii))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(florida))))).
          _parse([query], answer(A,largest(A,city(A)))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(delaware))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(kentucky))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(iowa))))).
          _parse([query], answer(A,(loc(B,A),const(B,cityid("new orleans",_))))).
          _parse([query], answer(A,(loc(B,A),const(B,stateid(massachusetts))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(iowa))))).
          _parse([query], answer(A,(loc(B,A),const(B,cityid(indianapolis,_))))).
          _parse([query], answer(A,(loc(B,A),const(B,cityid(austin,_))))).
          _parse([query], (A,(river(A),next_to(A,B(B),traverse(B,C),const(C,(state(C),next_to(C,D),const(D,stateid()))))))).
          _parse([query], (A,(river(A),next_to(A,B),const(B,(state(B),next_to(B,C),const(C,stateid(") )"))))).
          _parse([query], (A,(river(A),next_to(A,B),const(B,(state(B),next_to(B,C),const(C,stateid())))))).
          _parse([query], (A,(size(B,A),state(B,C),state(C),next_to(C,D),const(D,stateid(texas))))).
          _parse([query], (A,(state(A),next_to(A,B),const(B,C),const(C,stateid(") )",_))))).
          _parse([query], (A,(state(A),next_to(A,B),const(B,(state(B),next_to(B,C),const(C,stateid(texas))))))).
          _parse([query], (A,(state(A),next_to(A,B),const(B,((B),))))).
          _parse([query], (A,(state(A),next_to(A,B),const(B,(state(B),next_to(B,C),const(C,stateid())))))).
          _parse([query], (A,largest(B,(state(B),next_to(B,C),const(C,(((C)))))))).
          _parse([query], (A,(population(B,A),largest(C,(state(B),next_to(C,B)))))).
          _parse([query], (A,(len(B,A),state(B,C),const(C,cityid())))).
          _parse([query], (A,count(B,(river(B),next_to(B,C),const(C,((C),next_to(C,D),const(D,stateid(") )")))))).
          _parse([query], (A,(population(B,A),const(B,C),const(C,stateid())))).
          _parse([query], (A,(river(A),next_to(A,B),const(B,state(B),next_to(B,C),const(C,stateid(texas)))))).
          _parse([query], (A,(state(A),next_to(A,B),const(B,C),const(C,stateid())))).
          _parse([query], (A,(population(B,A),const(B,cityid())))).
          _parse([query], (A,largest(A,(river(A),next_to(A,B),const(B,stateid()))))).
          _parse([query], (A,(population(B,A),const(B,stateid())))).
          _parse([query], (A,(state(A),next_to(A,B),const(B,((B),next_to(B,C),const(C,stateid(") )"))))).
          _parse([query], (A,(river(A),next_to(A,B),const(B,stateid())))).
          _parse([query], (A,count(B,(state(B),next_to(B,C),const(C,((C),next_to(C,D),const(D,stateid()))))))).
          _parse([query], (A,(river(A),next_to(A,B),const(B,stateid())))).
          _parse([query], (A,largest(B,(state(B),next_to(B,C),const(C,stateid(texas)))))).
          _parse([query], (A,((B,(state(B),next_to(B,C),const(C,stateid())))))).
          _parse([query], (A,(river(A),next_to(A,B),const(B,stateid())))).
          _parse([query], (A,largest(A,B(state(A),next_to(B,C),const(C,stateid(texas)))))).
          _parse([query], (A,largest(B,(state(B),next_to(B,C),const(C,stateid(texas)))))).
          _parse([query], (A,(state(A),next_to(A,B),const(B,(((B),next_to(B,C),const(C,stateid()))))))).
          _parse([query], (A,(river(A),next_to(A,B),const(B,stateid(texas))))).
          _parse([query], (A,largest(A,(river(A),next_to(A,B),const(B,stateid(texas)))))).
          _parse([query], (A,count(B,(river(B),next_to(B,C),const(C,((C),next_to(C,D),const(D,stateid()))))))).
          _parse([query], (A,largest(B,(state(B),next_to(B,C),const(C,stateid(texas)))))).
          _parse([query], (A,largest(B,(state(A),next_to(B,C),const(C,stateid(texas)))))).
          _parse([query], (A,count(B,(state(B),next_to(B,C),const(C,stateid(texas))),A))).
          _parse([query], (A,largest(A,(river(A),next_to(A,B),const(B,stateid(texas)))))).
          _parse([query], (A,largest(B,(state(A),next_to(B,C),const(C,stateid(texas)))))).
          _parse([query], (A,count(B,(state(B),next_to(B,C),const(C,stateid(texas)))))).
          _parse([query], (A,largest(A,(river(A),next_to(A,B),const(B,stateid()))))).
          _parse([query], (A,largest(A,(river(A),next_to(A,B),const(B,stateid(texas)))))).
          _parse([query], (A,(state(A),next_to(A,B),const(B,stateid(texas))))).
          _parse([query], (A,count(B,(state(B),next_to(B,C),const(C,stateid(") )",_))))).
          _parse([query], (A,((B,(state(B),next_to(B,C),const(C,stateid(") )",_))))).
          _parse([query], (A,largest(A,(river(A),next_to(A,B),const(B,stateid()))))).
          _parse([query], (A,largest(B,(state(B),next_to(B,C),const(C,stateid()))))).
          _parse([query], (A,(population(B,A),const(B,stateid(") )"))))).
          _parse([query], (A,(state(A),next_to(A,B),const(B,stateid())))).
          _parse([query], (A,(population(B,A),const(B,cityid())))).
          _parse([query], (A,count(B,(state(B),next_to(B,C),const(C,stateid(") )",_))))).
          _parse([query], (A,(population(B,A),const(B,stateid())))).
          _parse([query], (A,largest(B,(state(B),next_to(B,C),const(C,stateid(texas)))))).
          _parse([query], (A,(river(A),next_to(A,B),const(B,C),const(C,stateid())))).
          _parse([query], (A,count(B,(river(B),next_to(B,C),const(C,stateid()))))).
          _parse([query], (A,largest(A,(river(A),next_to(A,B),const(B,stateid(texas)))))).
          _parse([query], (A,largest(A,(river(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], (A,count(B,(river(B),next_to(B,C),const(C,stateid(") )"))))).
          _parse([query], (A,largest(B,(state(A),next_to(B,A))))).
          _parse([query], (A,(population(B,A),const(B,stateid())))).
          _parse([query], (A,largest(A,(river(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], (A,largest(B,(state(B),next_to(B,A))))).
          _parse([query], (A,(river(A),next_to(A,B),const(B,stateid())))).
          _parse([query], (A,(population(B,A),const(B,stateid())))).
          _parse([query], (A,count(B,(river(B),next_to(B,C),const(C,stateid(") )"))))).
          _parse([query], (A,(river(A),next_to(A,B),const(B,stateid())))).
          _parse([query], (A,(population(B,A),const(B,stateid())))).
          _parse([query], (A,(population(B,A),const(B,stateid())))).
          _parse([query], (A,count(B,(river(B),next_to(B,C),const(C,stateid(") )")))).
          _parse([query], (A,(river(A),next_to(A,B),const(B,stateid())))).
          _parse([query], (A,(state(A),next_to(A,B),const(B,stateid(texas))))).
          _parse([query], (A,largest(A,(river(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], (A,((A,(river(A),loc(A,B),const(B,stateid(") )"))))).
          _parse([query], (A,largest(A,(river(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], (A,largest(B,(state(A),next_to(B,A))))).
          _parse([query], (A,count(B,(river(B),next_to(B,C),const(C,stateid(") )"))))).
          _parse([query], (A,largest(A,(state(A),next_to(A,B),const(B,stateid(texas)))))).
          _parse([query], (A,largest(A,(state(A),next_to(A,B))))).
          _parse([query], (A,largest(A,(place(A),loc(A,B),const(B,stateid(texas)))))).
          _parse([query], (A,(state(A),next_to(A,B),const(B,stateid(texas))))).
          _parse([query], (A,largest(A,B(state(A),next_to(B,C),const(C,stateid(texas)))))).
          _parse([query], (A,(state(A),next_to(A,B),const(B,stateid(") )"))))).
          _parse([query], (A,(river(A),next_to(A,B),const(B,stateid())))).
          _parse([query], (A,(population(B,A),const(B,stateid())))).
          _parse([query], (A,largest(B,(state(A),population(A,B))))).
          _parse([query], (A,count(B,(river(B),next_to(B,C),const(C,stateid(") )"))))).
          _parse([query], (A,(population(B,A),const(B,cityid())))).
          _parse([query], (A,largest(B,(state(A),next_to(B,C),const(C,stateid(texas)))))).
          _parse([query], (A,count(B,(river(B),next_to(B,C),const(C,stateid(") )"))))).
          _parse([query], (A,(river(A),next_to(A,B),const(B,stateid())))).
          _parse([query], (A,(river(A),loc(A,B),const(B,stateid(texas))))).
          _parse([query], (A,count(B,(river(B),next_to(B,C),const(C,stateid()))))).
          _parse([query], (A,(population(B,A),const(B,stateid())))).
          _parse([query], (A,(state(A),next_to(A,B),const(B,stateid(texas))))).
          _parse([query], (A,(river(A),loc(A,B),const(B,stateid())))).
          _parse([query], (A,(river(A),loc(A,B),const(B,stateid(texas))))).
          _parse([query], (A,(population(B,A),const(B,stateid())))).
          _parse([query], (A,(capital(A),loc(A,B),const(B,stateid(texas))))).
          _parse([query], (A,(population(B,A),const(B,stateid())))).
          _parse([query], (A,(capital(A),loc(A,B),const(B,stateid(texas))))).
          _parse([query], (A,(capital(A),next_to(A,B),const(B,stateid(texas))))).
          _parse([query], (A,(capital(A),next_to(A,B),const(B,stateid(texas))))).
          _parse([query], (A,(state(A),next_to(A,B),const(B,stateid())))).
          _parse([query], (A,(population(B,A),const(B,stateid())))).
          _parse([query], (A,(size(B,A),const(B,stateid())))).
          _parse([query], (A,largest(A,B(state(A),next_to(B,C),const(C,stateid(texas)))))).
          _parse([query], (A,(population(B,A),const(B,cityid())))).
          _parse([query], (A,(state(A),next_to(A,B),const(B,stateid(texas))))).
          _parse([query], (A,(state(A),next_to(A,B),const(B,stateid())))).
          _parse([query], (A,largest(A,((A))))).
          _parse([query], (A,largest(A,state(A)))).
          _parse([query], (A,(state(A),next_to(A,B),const(B,stateid(texas))))).
          _parse([query], (A,(state(A),next_to(A,B),const(B,stateid(texas))))).
          _parse([query], (A,largest(A,((A))))).
          _parse([query], (A,(state(A),next_to(A,B),const(B,stateid())))).
          _parse([query], (A,(state(A),next_to(A,B),const(B,stateid(texas))))).
          _parse([query], (A,(state(A),next_to(A,B),const(B,stateid(texas))))).
          _parse([query], (A,(state(A),next_to(A,B),const(B,stateid(texas))))).
          _parse([query], (A,(population(B,A),const(B,stateid())))).
          _parse([query], (A,(population(B,A),const(B,stateid())))).
          _parse([query], (A,(state(A),next_to(A,B),const(B,stateid(texas))))).
          _parse([query], (A,(population(B,A),const(B,stateid())))).
          _parse([query], (A,(population(B,A),const(B,stateid())))).
          DatalogParser.loadSafe(): end
        }
        240 statements
        Example tmpgkg2zqtg.dlog:0: query => {[fayetteville_nc:cityid/3],[bethesda_md:cityid/3],[alexandria_va:cityid/3],[raleigh_nc:cityid/3],[winston-salem_nc:cityid/3],[portsmouth_va:cityid/3],[silver spring_md:cityid/3],[huntington_wv:cityid/3],[newport news_va:cityid/3],[high point_nc:cityid/3],[charleston_wv:cityid/3],[dundalk_md:cityid/3],[lynchburg_va:cityid/3],[durham_nc:cityid/3],[hampton_va:cityid/3],[chesapeake_va:cityid/3],[roanoke_va:cityid/3]} | answer(A,(major(A),city(A),loc(A,B),state(B),river(C),loc(C,D),const(D,stateid(virginia)),traverse(C,B)))
        Example tmpgkg2zqtg.dlog:1: query => {[jefferson city_mo:cityid/3],[phoenix_az:cityid/3],[baton rouge_la:cityid/3],[salt lake city_ut:cityid/3],[oklahoma city_ok:cityid/3],[jackson_ms:cityid/3],[nashville_tn:cityid/3],[little rock_ar:cityid/3],[austin_tx:cityid/3],[santa fe_nm:cityid/3],[topeka_ks:cityid/3],[denver_co:cityid/3]} | answer(A,(capital(A),loc(A,B),state(B),next_to(B,C),state(C),next_to(C,D),const(D,stateid(texas))))
        Example tmpgkg2zqtg.dlog:2: query => {[delaware:riverid/2],[hudson:riverid/2],[allegheny:riverid/2]} | answer(A,(river(A),traverse(A,B),largest(C,(state(B),loc(C,B),city(C),loc(C,D),const(D,countryid(usa))))))
        Example tmpgkg2zqtg.dlog:3: query => {[texas:stateid/2]} | answer(A,largest(A,(state(A),const(B,riverid('rio grande')),traverse(B,A))))
        Example tmpgkg2zqtg.dlog:4: query => {[nevada:stateid/2],[utah:stateid/2],[oregon:stateid/2],[idaho:stateid/2],[colorado:stateid/2],[wyoming:stateid/2],[new mexico:stateid/2],[alaska:stateid/2],[washington:stateid/2],[california:stateid/2],[hawaii:stateid/2],[montana:stateid/2],[arizona:stateid/2]} | answer(A,(state(A),place(B),loc(B,A),higher(B,C),highest(C,(place(C),loc(C,D),const(D,stateid(texas))))))
        Example tmpgkg2zqtg.dlog:5: query => {[louisiana:stateid/2]} | answer(A,lowest(B,(state(A),traverse(C,A),const(C,riverid(mississippi)),loc(B,A),place(B))))
        Example tmpgkg2zqtg.dlog:6: query => {[nevada:stateid/2],[arizona:stateid/2],[oregon:stateid/2]} | answer(A,(state(A),next_to(B,A),largest(C,(state(B),population(B,C)))))
        Example tmpgkg2zqtg.dlog:7: query => {[nevada:stateid/2],[utah:stateid/2],[oregon:stateid/2],[idaho:stateid/2],[colorado:stateid/2],[new mexico:stateid/2],[washington:stateid/2],[california:stateid/2],[arizona:stateid/2]} | answer(A,(state(A),next_to(A,B),state(B),next_to(B,C),largest(D,(state(C),population(C,D)))))
        Example tmpgkg2zqtg.dlog:8: query => {[alaska:stateid/2]} | answer(A,(state(A),loc(B,A),highest(B,(place(B),loc(B,C),const(C,countryid(usa))))))
        Example tmpgkg2zqtg.dlog:9: query => {[401800count]} | answer(A,(population(B,A),largest(C,(state(B),area(B,C)))))
        Example tmpgkg2zqtg.dlog:10: query => {[6194length]} | answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,countryid(usa))))))
        Example tmpgkg2zqtg.dlog:11: query => {[0count]} | answer(A,count(B,(river(B),loc(B,C),state(C),loc(D,C),highest(D,place(D))),A))
        Example tmpgkg2zqtg.dlog:12: query => {[638333count]} | answer(A,(population(B,A),capital(B),loc(B,C),smallest(C,state(C))))
        Example tmpgkg2zqtg.dlog:13: query => {[iowa:stateid/2]} | answer(A,smallest(A,(state(A),longest(B,river(B)),traverse(B,A))))
        Example tmpgkg2zqtg.dlog:14: query => {[alaska:stateid/2],[california:stateid/2]} | answer(A,(state(A),loc(B,A),place(B),higher(B,C),highest(C,(place(C),loc(C,D),const(D,stateid(colorado))))))
        Example tmpgkg2zqtg.dlog:15: query => {[690767count]} | answer(A,(population(B,A),smallest(B,(state(B),next_to(B,C),const(C,stateid(wyoming))))))
        Example tmpgkg2zqtg.dlog:16: query => {[missouri:riverid/2]} | answer(A,longest(A,(river(A),traverse(A,B),const(B,countryid(usa)))))
        Example tmpgkg2zqtg.dlog:17: query => {[1.01e-04count/length^2]} | answer(A,(density(B,A),const(B,stateid(pennsylvania))))
        Example tmpgkg2zqtg.dlog:18: query => {[kentucky:stateid/2],[virginia:stateid/2],[mississippi:stateid/2],[louisiana:stateid/2],[alabama:stateid/2],[georgia:stateid/2],[missouri:stateid/2],[tennessee:stateid/2],[south carolina:stateid/2],[arkansas:stateid/2],[north carolina:stateid/2],[florida:stateid/2]} | answer(A,(state(A),next_to(A,B),state(B),next_to(B,C),state(C),next_to(C,D),const(D,stateid(florida))))
        Example tmpgkg2zqtg.dlog:19: query => {[baton rouge_la:cityid/3],[santa fe_nm:cityid/3],[oklahoma city_ok:cityid/3],[little rock_ar:cityid/3]} | answer(A,(capital(A),loc(A,B),state(B),next_to(B,C),const(C,stateid(texas))))
        Example tmpgkg2zqtg.dlog:20: query => {[6194length]} | answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),state(C)))))
        Example tmpgkg2zqtg.dlog:21: query => {[waukegan_il:cityid/3],[evanston_il:cityid/3],[peoria_il:cityid/3],[oak lawn_il:cityid/3],[rockford_il:cityid/3],[cicero_il:cityid/3],[champaign_il:cityid/3],[arlington heights_il:cityid/3],[skokie_il:cityid/3],[joliet_il:cityid/3],[springfield_il:cityid/3],[aurora_il:cityid/3],[decatur_il:cityid/3],[elgin_il:cityid/3]} | answer(A,(major(A),city(A),loc(A,B),const(B,stateid(illinois))))
        Example tmpgkg2zqtg.dlog:22: query => {[alaska:stateid/2]} | answer(A,highest(B,(state(A),loc(B,A),mountain(B))))
        Example tmpgkg2zqtg.dlog:23: query => {[225195124count]} | answer(A,sum(B,state(B),population(B),A))
        Example tmpgkg2zqtg.dlog:24: query => {[wabash:riverid/2],[ohio:riverid/2]} | answer(A,(river(A),loc(A,B),state(B),const(B,stateid(indiana))))
        Example tmpgkg2zqtg.dlog:25: query => {[colorado:stateid/2]} | answer(A,(state(A),most(A,B,(state(A),loc(B,A),river(B)))))
        Example tmpgkg2zqtg.dlog:26: query => {[minneapolis_mn:cityid/3]} | answer(A,largest(B,(city(A),loc(A,C),const(C,stateid(minnesota)),population(A,B))))
        Example tmpgkg2zqtg.dlog:27: query => {[arizona:stateid/2],[nevada:stateid/2],[oregon:stateid/2]} | answer(A,(state(A),next_to(A,B),most(B,C,(state(B),loc(C,B),city(C)))))
        Example tmpgkg2zqtg.dlog:28: query => {[west virginia:stateid/2],[virginia:stateid/2],[district of columbia:stateid/2],[maryland:stateid/2]} | answer(A,(state(A),const(B,riverid(potomac)),traverse(B,A)))
        Example tmpgkg2zqtg.dlog:29: query => {[allegheny:riverid/2]} | answer(A,longest(A,(river(A),traverse(A,B),const(B,stateid('new york')))))
        Example tmpgkg2zqtg.dlog:30: query => {[18count]} | answer(A,count(B,(major(B),city(B),loc(B,C),state(C),next_to(C,D),const(D,stateid(nebraska))),A))
        Example tmpgkg2zqtg.dlog:31: query => {[new jersey:stateid/2]} | answer(A,largest(B,(state(A),density(A,B))))
        Example tmpgkg2zqtg.dlog:32: query => {[new york:stateid/2]} | answer(A,(state(A),loc(B,A),largest(C,(city(B),population(B,C)))))
        Example tmpgkg2zqtg.dlog:33: query => {[5count]} | answer(A,count(B,(state(B),const(C,riverid(colorado)),river(C),traverse(C,B)),A))
        Example tmpgkg2zqtg.dlog:34: query => {[anchorage_ak:cityid/3]} | answer(A,smallest(A,(city(A),loc(A,B),largest(B,state(B)))))
        Example tmpgkg2zqtg.dlog:35: query => {[louisiana:stateid/2]} | answer(A,smallest(B,(state(A),area(A,B),next_to(A,C),const(C,stateid(texas)))))
        Example tmpgkg2zqtg.dlog:36: query => {[magazine mountain:placeid/2],[cheaha mountain:placeid/2],[clingmans dome:placeid/2],[driskill mountain:placeid/2]} | answer(A,(high_point(B,A),loc(A,B),state(B),next_to(B,C),const(C,stateid(mississippi))))
        Example tmpgkg2zqtg.dlog:37: query => {[missouri:riverid/2]} | answer(A,longest(A,(river(A),loc(A,B),const(B,countryid(usa)))))
        Example tmpgkg2zqtg.dlog:38: query => {[tenleytown:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),smallest(B,state(B)))))
        Example tmpgkg2zqtg.dlog:39: query => {} | answer(A,(state(A),next_to(A,B),smallest(C,(state(B),population(B,C)))))
        Example tmpgkg2zqtg.dlog:40: query => {[31count]} | answer(A,count(B,(state(B),next_to(B,C),major(C),river(C)),A))
        Example tmpgkg2zqtg.dlog:41: query => {[3901length]} | answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,stateid(montana))))))
        Example tmpgkg2zqtg.dlog:42: query => {[death valley:placeid/2]} | answer(A,lowest(A,(place(A),loc(A,B),const(B,countryid(usa)))))
        Example tmpgkg2zqtg.dlog:43: query => {[casper_wy:cityid/3]} | answer(A,largest(B,(population(A,B),city(A),loc(A,C),const(C,stateid(wyoming)))))
        Example tmpgkg2zqtg.dlog:44: query => {} | answer(A,(population(B,A),const(B,cityid(springfield,sd))))
        Example tmpgkg2zqtg.dlog:45: query => {[iowa:stateid/2],[wisconsin:stateid/2],[kentucky:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[louisiana:stateid/2],[missouri:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[arkansas:stateid/2]} | answer(A,(state(A),const(B,riverid(mississippi)),river(B),traverse(B,A)))
        Example tmpgkg2zqtg.dlog:46: query => {[401800count]} | answer(A,(population(B,A),largest(B,state(B))))
        Example tmpgkg2zqtg.dlog:47: query => {[2count]} | answer(A,count(B,(state(B),loc(C,B),const(C,cityid(rochester,_))),A))
        Example tmpgkg2zqtg.dlog:48: query => {[9.83e+12length^2]} | answer(A,(area(B,A),const(B,countryid(usa))))
        Example tmpgkg2zqtg.dlog:49: query => {[scotts valley_ca:cityid/3]} | answer(A,smallest(B,(city(A),population(A,B))))
        Example tmpgkg2zqtg.dlog:50: query => {[163length]} | answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,stateid(louisiana))))))
        Example tmpgkg2zqtg.dlog:51: query => {[pontchartrain:lakeid/2]} | answer(A,(lake(A),loc(A,B),state(B),next_to(B,C),const(C,stateid(texas))))
        Example tmpgkg2zqtg.dlog:52: query => {[mount mckinley:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,countryid(usa)))))
        Example tmpgkg2zqtg.dlog:53: query => {[missouri:riverid/2]} | answer(A,longest(A,(river(A),loc(A,B),const(B,countryid(usa)))))
        Example tmpgkg2zqtg.dlog:54: query => {[46count]} | answer(A,count(B,(river(B),loc(B,C),const(C,countryid(usa))),A))
        Example tmpgkg2zqtg.dlog:55: query => {[new jersey:stateid/2]} | answer(A,largest(B,(state(A),density(A,B))))
        Example tmpgkg2zqtg.dlog:56: query => {[425022count]} | answer(A,(population(B,A),const(B,cityid(atlanta,_))))
        Example tmpgkg2zqtg.dlog:57: query => {[mckinley:mountainid/2]} | answer(A,highest(A,(mountain(A),loc(A,B),const(B,stateid(alaska)))))
        Example tmpgkg2zqtg.dlog:58: query => {[new jersey:stateid/2]} | answer(A,largest(B,(state(A),density(A,B))))
        Example tmpgkg2zqtg.dlog:59: query => {[lawton_ok:cityid/3],[norman_ok:cityid/3]} | answer(A,(major(A),city(A),loc(A,B),const(B,stateid(oklahoma))))
        Example tmpgkg2zqtg.dlog:60: query => {[2913000count]} | answer(A,(population(B,A),const(B,stateid(iowa))))
        Example tmpgkg2zqtg.dlog:61: query => {[435count]} | answer(A,count(B,(city(B),loc(B,C),const(C,countryid(usa))),A))
        Example tmpgkg2zqtg.dlog:62: query => {[independence_mo:cityid/3],[springfield_mo:cityid/3],[columbia_mo:cityid/3],[st. joseph_mo:cityid/3]} | answer(A,(major(A),city(A),loc(A,B),const(B,stateid(missouri))))
        Example tmpgkg2zqtg.dlog:63: query => {[8.06e+10length^2]} | answer(A,(area(B,A),const(B,stateid('south carolina'))))
        Example tmpgkg2zqtg.dlog:64: query => {[947200count]} | answer(A,(population(B,A),const(B,stateid('rhode island'))))
        Example tmpgkg2zqtg.dlog:65: query => {[3count]} | answer(A,count(B,(river(B),loc(B,C),const(C,stateid('new york'))),A))
        Example tmpgkg2zqtg.dlog:66: query => {[lakewood_oh:cityid/3],[springfield_oh:cityid/3],[lorain_oh:cityid/3],[kettering_oh:cityid/3],[euclid_oh:cityid/3],[youngstown_oh:cityid/3],[elyria_oh:cityid/3],[parma_oh:cityid/3],[hamilton_oh:cityid/3],[canton_oh:cityid/3]} | answer(A,(major(A),city(A),loc(A,B),const(B,stateid(ohio))))
        Example tmpgkg2zqtg.dlog:67: query => {[new jersey:stateid/2],[new york:stateid/2],[vermont:stateid/2],[delaware:stateid/2],[iowa:stateid/2],[wisconsin:stateid/2],[nevada:stateid/2],[kentucky:stateid/2],[utah:stateid/2],[massachusetts:stateid/2],[oregon:stateid/2],[virginia:stateid/2],[indiana:stateid/2],[new hampshire:stateid/2],[south dakota:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[idaho:stateid/2],[colorado:stateid/2],[district of columbia:stateid/2],[louisiana:stateid/2],[alabama:stateid/2],[north dakota:stateid/2],[wyoming:stateid/2],[pennsylvania:stateid/2],[georgia:stateid/2],[michigan:stateid/2],[missouri:stateid/2],[texas:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[south carolina:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[washington:stateid/2],[connecticut:stateid/2],[kansas:stateid/2],[california:stateid/2],[nebraska:stateid/2],[ohio:stateid/2],[north carolina:stateid/2],[florida:stateid/2],[west virginia:stateid/2],[montana:stateid/2],[maryland:stateid/2],[arizona:stateid/2]} | answer(A,(state(A),loc(B,A),river(B),traverse(B,A)))
        Example tmpgkg2zqtg.dlog:68: query => {[pecos:riverid/2],[washita:riverid/2]} | answer(A,shortest(A,(river(A),loc(A,B),const(B,stateid(texas)))))
        Example tmpgkg2zqtg.dlog:69: query => {[granite peak:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(montana)))))
        Example tmpgkg2zqtg.dlog:70: query => {[guadalupe peak:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(texas)))))
        Example tmpgkg2zqtg.dlog:71: query => {[alaska:stateid/2]} | answer(A,smallest(B,(state(A),density(A,B))))
        Example tmpgkg2zqtg.dlog:72: query => {[435count]} | answer(A,count(B,(city(B),loc(B,C),const(C,countryid(usa))),A))
        Example tmpgkg2zqtg.dlog:73: query => {[new mexico:stateid/2]} | answer(A,largest(A,(state(A),next_to(A,B),const(B,stateid(texas)))))
        Example tmpgkg2zqtg.dlog:74: query => {[ohio:stateid/2],[indiana:stateid/2],[wisconsin:stateid/2]} | answer(A,(next_to(A,B),state(A),const(B,stateid(michigan))))
        Example tmpgkg2zqtg.dlog:75: query => {[death valley:placeid/2]} | answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(california)))))
        Example tmpgkg2zqtg.dlog:76: query => {[iowa:stateid/2],[wisconsin:stateid/2],[kentucky:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[louisiana:stateid/2],[missouri:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[arkansas:stateid/2]} | answer(A,(state(A),const(B,riverid(mississippi)),traverse(B,A)))
        Example tmpgkg2zqtg.dlog:77: query => {[mississippi:riverid/2]} | answer(A,most(A,B,(river(A),traverse(A,B),state(B))))
        Example tmpgkg2zqtg.dlog:78: query => {[iowa:stateid/2]} | answer(A,(state(A),const(B,cityid('des moines',_)),loc(B,A)))
        Example tmpgkg2zqtg.dlog:79: query => {[san angelo_tx:cityid/3],[richardson_tx:cityid/3],[amarillo_tx:cityid/3],[grand prairie_tx:cityid/3],[waco_tx:cityid/3],[beaumont_tx:cityid/3],[longview_tx:cityid/3],[irving_tx:cityid/3],[brownsville_tx:cityid/3],[mesquite_tx:cityid/3],[pasadena_tx:cityid/3],[wichita falls_tx:cityid/3],[laredo_tx:cityid/3],[mcallen_tx:cityid/3],[abilene_tx:cityid/3],[garland_tx:cityid/3],[plano_tx:cityid/3],[odessa_tx:cityid/3],[midland_tx:cityid/3],[port arthur_tx:cityid/3],[tyler_tx:cityid/3]} | answer(A,(major(A),city(A),loc(A,B),const(B,stateid(texas))))
        Example tmpgkg2zqtg.dlog:80: query => {[275741count]} | answer(A,(population(B,A),const(B,cityid(sacramento,_))))
        Example tmpgkg2zqtg.dlog:81: query => {[alaska:stateid/2]} | answer(A,smallest(B,(state(A),population(A,B))))
        Example tmpgkg2zqtg.dlog:82: query => {[4count]} | answer(A,count(B,(river(B),loc(B,C),const(C,stateid(missouri))),A))
        Example tmpgkg2zqtg.dlog:83: query => {[alaska:stateid/2]} | answer(A,(loc(B,A),state(A),const(B,placeid('mount mckinley'))))
        Example tmpgkg2zqtg.dlog:84: query => {[new york:stateid/2]} | answer(A,largest(B,(state(A),loc(B,A),city(B))))
        Example tmpgkg2zqtg.dlog:85: query => {[10count]} | answer(A,count(B,(river(B),loc(B,C),const(C,stateid(colorado))),A))
        Example tmpgkg2zqtg.dlog:86: query => {} | answer(A,(major(A),river(A),loc(A,B),const(B,stateid(texas))))
        Example tmpgkg2zqtg.dlog:87: query => {[richmond_va:cityid/3],[norfolk_va:cityid/3],[alexandria_va:cityid/3],[portsmouth_va:cityid/3],[newport news_va:cityid/3],[lynchburg_va:cityid/3],[hampton_va:cityid/3],[virginia beach_va:cityid/3],[chesapeake_va:cityid/3],[roanoke_va:cityid/3],[arlington_va:cityid/3]} | answer(A,(city(A),loc(A,B),const(B,stateid(virginia))))
        Example tmpgkg2zqtg.dlog:88: query => {[279count]} | answer(A,count(B,(major(B),city(B)),A))
        Example tmpgkg2zqtg.dlog:89: query => {[786700count]} | answer(A,(population(B,A),const(B,stateid(montana))))
        Example tmpgkg2zqtg.dlog:90: query => {[louisiana:stateid/2],[texas:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2]} | answer(A,(state(A),loc(B,A),const(B,riverid(red)),river(B)))
        Example tmpgkg2zqtg.dlog:91: query => {[gila:riverid/2],[pecos:riverid/2],[cimarron:riverid/2],[rio grande:riverid/2],[canadian:riverid/2],[red:riverid/2],[san juan:riverid/2]} | answer(A,(river(A),loc(A,B),const(B,stateid('new mexico'))))
        Example tmpgkg2zqtg.dlog:92: query => {[oxnard_ca:cityid/3],[santa barbara_ca:cityid/3],[buena park_ca:cityid/3],[downey_ca:cityid/3],[concord_ca:cityid/3],[orange_ca:cityid/3],[pomona_ca:cityid/3],[san jose_ca:cityid/3],[vallejo_ca:cityid/3],[san bernardino_ca:cityid/3],[san leandro_ca:cityid/3],[long beach_ca:cityid/3],[modesto_ca:cityid/3],[richmond_ca:cityid/3],[westminster_ca:cityid/3],[mountain view_ca:cityid/3],[santa clara_ca:cityid/3],[citrus heights_ca:cityid/3],[oakland_ca:cityid/3],[carson_ca:cityid/3],[glendale_ca:cityid/3],[san diego_ca:cityid/3],[los angeles_ca:cityid/3],[oceanside_ca:cityid/3],[south gate_ca:cityid/3],[san francisco_ca:cityid/3],[riverside_ca:cityid/3],[fresno_ca:cityid/3],[stockton_ca:cityid/3],[scotts valley_ca:cityid/3],[garden grove_ca:cityid/3],[east los angeles_ca:cityid/3],[ontario_ca:cityid/3],[alhambra_ca:cityid/3],[costa mesa_ca:cityid/3],[irvine_ca:cityid/3],[hayward_ca:cityid/3],[santa monica_ca:cityid/3],[santa rosa_ca:cityid/3],[el cajon_ca:cityid/3],[west covina_ca:cityid/3],[chula vista_ca:cityid/3],[redondo beach_ca:cityid/3],[burbank_ca:cityid/3],[berkeley_ca:cityid/3],[inglewood_ca:cityid/3],[alameda_ca:cityid/3],[san mateo_ca:cityid/3],[el monte_ca:cityid/3],[sunnyvale_ca:cityid/3],[fairfield_ca:cityid/3],[newport beach_ca:cityid/3],[sacramento_ca:cityid/3],[ventura_ca:cityid/3],[bakersfield_ca:cityid/3],[thousand oaks_ca:cityid/3],[fremont_ca:cityid/3],[anaheim_ca:cityid/3],[torrance_ca:cityid/3],[lakewood_ca:cityid/3],[simi valley_ca:cityid/3],[santa ana_ca:cityid/3],[compton_ca:cityid/3],[whittier_ca:cityid/3],[fullerton_ca:cityid/3],[daly city_ca:cityid/3],[salinas_ca:cityid/3],[norwalk_ca:cityid/3],[pasadena_ca:cityid/3],[escondido_ca:cityid/3],[huntington beach_ca:cityid/3]} | answer(A,(city(A),loc(A,B),const(B,stateid(california))))
        Example tmpgkg2zqtg.dlog:93: query => {[964000count]} | answer(A,(population(B,A),const(B,stateid(hawaii))))
        Example tmpgkg2zqtg.dlog:94: query => {[honolulu_hi:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid(hawaii))))
        Example tmpgkg2zqtg.dlog:95: query => {[23670000count]} | answer(A,(population(B,A),const(B,stateid(california))))
        Example tmpgkg2zqtg.dlog:96: query => {[salt lake city_ut:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid(utah))))
        Example tmpgkg2zqtg.dlog:97: query => {[austin_tx:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid(texas))))
        Example tmpgkg2zqtg.dlog:98: query => {[atlanta_ga:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid(georgia))))
        Example tmpgkg2zqtg.dlog:99: query => {[new jersey:stateid/2],[new york:stateid/2],[vermont:stateid/2],[delaware:stateid/2],[iowa:stateid/2],[wisconsin:stateid/2],[nevada:stateid/2],[kentucky:stateid/2],[utah:stateid/2],[massachusetts:stateid/2],[oregon:stateid/2],[virginia:stateid/2],[indiana:stateid/2],[new hampshire:stateid/2],[south dakota:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[rhode island:stateid/2],[maine:stateid/2],[idaho:stateid/2],[colorado:stateid/2],[district of columbia:stateid/2],[alabama:stateid/2],[north dakota:stateid/2],[wyoming:stateid/2],[pennsylvania:stateid/2],[georgia:stateid/2],[michigan:stateid/2],[missouri:stateid/2],[texas:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[south carolina:stateid/2],[alaska:stateid/2],[washington:stateid/2],[connecticut:stateid/2],[kansas:stateid/2],[california:stateid/2],[nebraska:stateid/2],[ohio:stateid/2],[north carolina:stateid/2],[florida:stateid/2],[west virginia:stateid/2],[hawaii:stateid/2],[montana:stateid/2],[maryland:stateid/2],[arizona:stateid/2]} | answer(A,(state(A),\+(next_to(A,B),const(B,stateid(texas)))))
        Example tmpgkg2zqtg.dlog:100: query => {[1461000count]} | answer(A,(population(B,A),const(B,stateid(utah))))
        Example tmpgkg2zqtg.dlog:101: query => {[369200000length^2]} | answer(A,(area(B,A),const(B,cityid(seattle,_))))
        Example tmpgkg2zqtg.dlog:102: query => {[alaska:stateid/2],[hawaii:stateid/2]} | answer(A,fewest(A,B,(state(A),next_to(A,B),state(B))))
        Example tmpgkg2zqtg.dlog:103: query => {[3033000length]} | answer(A,(len(B,A),const(B,riverid('rio grande'))))
        Example tmpgkg2zqtg.dlog:104: query => {[delaware:stateid/2]} | answer(A,(state(A),capital(A,B),const(B,cityid(dover,_))))
        Example tmpgkg2zqtg.dlog:105: query => {[new jersey:stateid/2],[vermont:stateid/2],[massachusetts:stateid/2],[pennsylvania:stateid/2],[connecticut:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid('new york'))))
        Example tmpgkg2zqtg.dlog:106: query => {[missouri:riverid/2]} | answer(A,longest(A,river(A)))
        Example tmpgkg2zqtg.dlog:107: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgkg2zqtg.dlog:108: query => {} | answer(A,(state(A),next_to(A,B),const(B,stateid(hawaii))))
        Example tmpgkg2zqtg.dlog:109: query => {[georgia:stateid/2],[alabama:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(florida))))
        Example tmpgkg2zqtg.dlog:110: query => {[new york_ny:cityid/3]} | answer(A,largest(A,city(A)))
        Example tmpgkg2zqtg.dlog:111: query => {[arkansas:stateid/2],[louisiana:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(texas))))
        Example tmpgkg2zqtg.dlog:112: query => {[pennsylvania:stateid/2],[new jersey:stateid/2],[maryland:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(delaware))))
        Example tmpgkg2zqtg.dlog:113: query => {[virginia:stateid/2],[indiana:stateid/2],[missouri:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[ohio:stateid/2],[west virginia:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(kentucky))))
        Example tmpgkg2zqtg.dlog:114: query => {[wisconsin:stateid/2],[south dakota:stateid/2],[minnesota:stateid/2],[missouri:stateid/2],[illinois:stateid/2],[nebraska:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(iowa))))
        Example tmpgkg2zqtg.dlog:115: query => {[louisiana:stateid/2],[usa:countryid/2]} | answer(A,(loc(B,A),const(B,cityid('new orleans',_))))
        Example tmpgkg2zqtg.dlog:116: query => {[usa:countryid/2]} | answer(A,(loc(B,A),const(B,stateid(massachusetts))))
        Example tmpgkg2zqtg.dlog:117: query => {[wisconsin:stateid/2],[south dakota:stateid/2],[minnesota:stateid/2],[missouri:stateid/2],[illinois:stateid/2],[nebraska:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(iowa))))
        Example tmpgkg2zqtg.dlog:118: query => {[indiana:stateid/2],[usa:countryid/2]} | answer(A,(loc(B,A),const(B,cityid(indianapolis,_))))
        Example tmpgkg2zqtg.dlog:119: query => {[usa:countryid/2],[texas:stateid/2]} | answer(A,(loc(B,A),const(B,cityid(austin,_))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
      }
    } [2.7s, cum. 2.7s]
    Randomly splitting 120 general examples
    84 training examples, 36 test examples
  } [2.7s, cum. 2.8s]
  Execution directory: /home/vikram/NLP-/proj2/state/execs/11.exec
} [2.8s]
